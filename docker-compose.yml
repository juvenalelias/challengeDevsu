version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres_db
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - mynetwork

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - mynetwork
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "baeldung:1:1"
    networks:
      - mynetwork

  cliente-service:
    build:
      context: ./cliente-service
      dockerfile: Dockerfile
    container_name: cliente-service
    environment:
      DATABASE_URL: postgres://root:postgres@postgres:5432/cliente_db
      KAFKA_BROKER: kafka:9092
    depends_on:
      - postgres
      - kafka
    ports:
      - "8081:8081"
    networks:
      - mynetwork

  cuenta-movimiento-service:
    build:
      context: ./cuenta-movimiento-service
      dockerfile: Dockerfile
    container_name: cuenta-movimiento-service
    environment:
      DATABASE_URL: postgres://user:postgres@postgres:5432/cuenta_db
      KAFKA_BROKER: kafka:9092
    depends_on:
      - postgres
      - kafka
    ports:
      - "8084:8084"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge